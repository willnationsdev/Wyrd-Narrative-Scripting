
==================== FINAL INTERFACE ====================
2017-02-28 06:36:19.9350471 UTC

interface Wyrd-0.1.0.0-4JCULo2kQf76e3ZuwFNnR0:WyrdLib 8002
  interface hash: 2d2a0c8fd9a5cab6d045e2a8fc8077cd
  ABI hash: 66677ad115cab8a69bbdabe0cc931b54
  export-list hash: 43d6046cf074150c1f0b997bd15cbaa8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a9c315ec71a6a1bf9c3cc77f3b0cb66d
  sig of: Nothing
  used TH splices: False
  where
exports:
  WyrdLib.someFunc
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
345c32cfa016d777ea12ae0017d68ba5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   WyrdLib.$trModule2
                   WyrdLib.$trModule1) -}
fb79f8c5e1f8c048ae1758fd9fed4704
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "WyrdLib"#) -}
c5595fd79558cd5a4fca44df61c18a1b
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Wyrd-0.1.0.0-4JCULo2kQf76e3ZuwFNnR0"#) -}
075789c4015f2b564a1f149394dbf72b
  someFunc :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                WyrdLib.someFunc1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
2b3a8c56c6f8a580b06ad278427f6578
  someFunc1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   WyrdLib.someFunc2
                   GHC.Types.True
                   eta) -}
57d488a16e6b71242f0091f23fead95a
  someFunc2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "someFunc"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

