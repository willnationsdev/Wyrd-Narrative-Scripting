
==================== FINAL INTERFACE ====================
2017-03-12 17:39:22.2278418 UTC

interface main@main:Main 8002
  interface hash: f54b946451f366e0fab3434c03763acf
  ABI hash: 46d1c44423c9c86549b3f1279cf612ab
  export-list hash: 51d34a189c59e9d082d9b7d971464839
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cfa42f323a04d691ba510fcd390a8174
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Wyrd-0.1.0.0@Wyrd-0.1.0.0-4JCULo2kQf76e3ZuwFNnR0
                      base-4.9.1.0* ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  Wyrd-0.1.0.0@Wyrd-0.1.0.0-4JCULo2kQf76e3ZuwFNnR0:TokiSonaLib aacad943e485923a89b8664b82fefe1f
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
01efffe81a3b63655c8c2e4b76f20534
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
74ac32516c350d38e7ad2480d39dfebe
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case ipv1 of wild {
                           [] -> case GHC.List.foldl2 ret_ty GHC.Base.String of {}
                           : x xs
                           -> case TokiSonaLib.last'1
                                     @ GHC.Types.Char
                                     xs
                                     x of ww { GHC.Types.C# ww1 ->
                              GHC.Show.$w$cshowsPrec17 ww1 (GHC.Types.[] @ GHC.Types.Char) } })
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (case GHC.List.$w!!
                                @ GHC.Types.Char
                                (GHC.List.reverse @ GHC.Types.Char ipv1)
                                1# of ww { GHC.Types.C# ww1 ->
                         GHC.Show.$w$cshowsPrec17 ww1 (GHC.Types.[] @ GHC.Types.Char) })
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case GHC.List.$w!!
                           @ GHC.Types.Char
                           (GHC.List.reverse @ GHC.Types.Char ipv1)
                           2# of ww { GHC.Types.C# ww1 ->
                    GHC.Show.$w$cshowsPrec17 ww1 (GHC.Types.[] @ GHC.Types.Char) })
                   GHC.Types.True
                   ipv4 } } }) -}
2e93c8269fa5dfa975c734ba41b7a208
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

